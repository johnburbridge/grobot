import org.gradle.api.tasks.OutputDirectories;
import org.gradle.api.tasks.TaskAction;

/**
 * Default tasks for groovy projects
 */
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'findbugs'
apply from: rootDir.toString() + '/gradle/cobertura.gradle'

repositories {
	mavenCentral()
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:1.8.6'
    testCompile 'junit:junit:4.10', 'org.mockito:mockito-all:1.8.5'
}

/**
 * Initialize the source / resource directories
 */
task intialize(type: CreateDirectories) {
	directories = [
		sourceSets*.groovy.srcDirs,
		sourceSets*.java.srcDirs,
		sourceSets*.resources.srcDirs
	].flatten()
}
tasks.eclipse.dependsOn(intialize)

/**
 * Creates directories if they don't already exist
 * 
 * @author jburbridge
 * @since 9/27/2012
 */
class CreateDirectories extends DefaultTask {

	@OutputDirectories
	List<File> directories

	@TaskAction
	def createDirectories() {
		directories.each { File directory ->
			if (!directory.exists()) {
				logger.warn("Creating ${directory}")
				directory.mkdirs()
			}
		}
	}
}
